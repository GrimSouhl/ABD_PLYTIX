--desde plytix
CREATE TABLE TRAZA (
    Fecha Date,
    Usuario VARCHAR2(40),
    Causante VARCHAR2(40),
    Descripcion VARCHAR2(500)
);




CREATE OR REPLACE PACKAGE PKG_ADMIN_PRODUCTOS AS 

    EXCEPTION_PLAN_NO_ASIGNADO EXCEPTION;
    PRAGMA EXCEPTION_INIT(EXCEPTION_PLAN_NO_ASIGNADO, -20001);
    
    EXCEPTION_ASOCIACION_DUPLICADA EXCEPTION;
    PRAGMA EXCEPTION_INIT(EXCEPTION_ASOCIACION_DUPLICADA, -20002);
    
    INVALID_DATA EXCEPTION;
    PRAGMA EXCEPTION_INIT(INVALID_DATA, -20003);
   -- 1
   FUNCTION F_OBTENER_PLAN_CUENTA(p_cuentaid IN CUENTA.CUENTAID%TYPE) RETURN PLAN%ROWTYPE;

   -- 2
   FUNCTION F_CONTAR_PRODUCTOS_CUENTA(p_cuentaid IN CUENTA.CUENTAID%TYPE) RETURN NUMBER;

   -- 3
   FUNCTION F_VALIDAR_ATRIBUTOS_PRODUCTO(
      p_producto_gtin IN PRODUCTO.GTIN%TYPE,
      p_cuenta_id     IN PRODUCTO.CUENTAID%TYPE
   ) RETURN BOOLEAN;

   -- 4
   FUNCTION F_NUM_CATEGORIAS_CUENTA(p_cuenta_id IN CUENTA.CUENTAID%TYPE) RETURN NUMBER;

   -- 5
   PROCEDURE P_ACTUALIZAR_NOMBRE_PRODUCTO(
      p_producto_gtin IN PRODUCTO.GTIN%TYPE,
      p_cuenta_id     IN PRODUCTO.CUENTAID%TYPE,
      p_nuevo_nombre  IN PRODUCTO.PRODUCTONOMBRE%TYPE
   );

   -- 6
   PROCEDURE P_ASOCIAR_ACTIVO_A_PRODUCTO(
      p_producto_gtin         IN PRODUCTO.GTIN%TYPE,
      p_producto_cuenta_id    IN PRODUCTO.CUENTAID%TYPE,
      p_activo_id             IN ACTIVO.ACTIVOID%TYPE,
      p_activo_cuenta_id      IN ACTIVO.CUENTAID%TYPE
   );

   -- 7
   PROCEDURE P_ELIMINAR_PRODUCTO_Y_ASOCIACIONES(
      p_producto_gtin IN PRODUCTO.GTIN%TYPE,
      p_cuenta_id     IN PRODUCTO.CUENTAID%TYPE
   );

   -- 8
   PROCEDURE P_CREAR_USUARIO(
      p_usuario  IN USUARIO%ROWTYPE,
      p_rol      IN VARCHAR2,
      p_password IN VARCHAR2
   );

   -- 9
   PROCEDURE P_ACTUALIZAR_PRODUCTOS(
      p_cuenta_id IN CUENTA.CUENTAID%TYPE
   );

END;
/






